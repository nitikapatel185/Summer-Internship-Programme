//Given a binary array nums, return the maximum number of consecutive 1's in the array.

class Solution {
    public int findMaxConsecutiveOnes(int[] nums) {
        int a=0,c=0;
        for(int x:nums)
        {
            if(x==1)
            {
                c++;
            }
            else
            {
                a=Math.max(a,c);
              c=0;
            }
        }
        return Math.max(a,c);
    }
}

//Given an array nums of integers, return how many of them contain an even number of digits.

class Solution
{
    public int findNumbers(int[] nums) 
    {
       int even = 0;
        for (int i=0; i<nums.length; i++)
        {
            
            int c = 0, num = nums[i];
           
            while (num!=0)
            {
                num /= 10;
                
                ++c;
            }
            if (c%2==0) 
                even++;
            
        }
        
        return even;
    }
}

//Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order.

class Solution {
    public int[] sortedSquares(int[] nums)
    {
        for (int i = 0; i < nums.length; i++) 
        {
            nums[i] = nums[i] * nums[i];
        }
        Arrays.sort(nums);
        return nums;

    }
}
